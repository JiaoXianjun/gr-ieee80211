# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-ieee80211
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX
find_package(CUDA)  # added by cloud

########################################################################
# Setup CUDA added by cloud
########################################################################
add_library(gnuradio-cloud-cu STATIC
    cloud80211phycu.cu
)
set_target_properties(gnuradio-cloud-cu PROPERTIES 
    POSITION_INDEPENDENT_CODE ON
    CUDA_VISIBILITY_PRESET "hidden"
    CUDA_SEPARABLE_COMPILATION ON
)
target_include_directories(gnuradio-cloud-cu
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
    ${CUDA_INCLUDE_DIRS} 
)
########################################################################

list(APPEND ieee80211_sources
    trigger_impl.cc
    sync_impl.cc
    signal_impl.cc
    modulation_impl.cc
    demod_impl.cc
    decode_impl.cc
    encode_impl.cc
    cloud80211phy.cc
    signal2_impl.cc
    demod2_impl.cc
)

set(ieee80211_sources "${ieee80211_sources}" PARENT_SCOPE)
if(NOT ieee80211_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT ieee80211_sources)

add_library(gnuradio-ieee80211 SHARED ${ieee80211_sources})
target_link_libraries(gnuradio-ieee80211 PUBLIC
    gnuradio::gnuradio-runtime
    gnuradio::gnuradio-fft
    UHD::UHD
    ${CUDA_CUDART_LIBRARY}      #added by cloud
)
target_link_libraries(gnuradio-ieee80211 PRIVATE gnuradio-cloud-cu)     #added by cloud
target_include_directories(gnuradio-ieee80211
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
    ${CUDA_INCLUDE_DIRS}        #added by cloud
  )
set_target_properties(gnuradio-ieee80211 PROPERTIES DEFINE_SYMBOL "gnuradio_ieee80211_EXPORTS")
set_target_properties(gnuradio-ieee80211 PROPERTIES CUDA_ARCHITECTURES "60;61;62;70;72;75;86")      # added by cloud, arch from 10 series to 30 series
set_target_properties(gnuradio-cloud-cu PROPERTIES CUDA_ARCHITECTURES "60;61;62;70;72;75;86")       # added by cloud, arch from 10 series to 30 series

if(APPLE)
    set_target_properties(gnuradio-ieee80211 PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-ieee80211)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_ieee80211_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-ieee80211)

if(NOT test_ieee80211_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_ieee80211_sources)

foreach(qa_file ${test_ieee80211_sources})
    GR_ADD_CPP_TEST("ieee80211_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
